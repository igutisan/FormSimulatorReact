@use "variables" as vars;
@use "sass:map";
@use "sass:meta";

// Aquí definimos las variables que Tailwind usará para generar sus clases
:root {
  // Colores
  @each $name, $value in vars.$colors {
    @if meta.type-of($value) == "map" {
      @each $shade, $color in $value {
        --color-#{$name}-#{$shade}: #{$color};
      }
    } @else {
      --color-#{$name}: #{$value};
    }
  }
  
  // Espaciado
  @each $name, $value in vars.$spacing {
    --spacing-#{$name}: #{$value};
  }
  
  // Radios de borde
  @each $name, $value in vars.$border-radius {
    --radius-#{$name}: #{$value};
  }
  
  // Tamaños de fuente
  @each $name, $value in vars.$font-size {
    --font-size-#{$name}: #{$value};
  }
  
  // Pesos de fuente
  @each $name, $value in vars.$font-weight {
    --font-weight-#{$name}: #{$value};
  }
  
  // Sombras
  @each $name, $value in vars.$box-shadow {
    --shadow-#{$name}: #{$value};
  }
}

// Configuración personalizada para el archivo tailwind.config.js
/*
module.exports = {
  theme: {
    colors: {
      primary: 'var(--color-primary)',
      secondary: 'var(--color-secondary)',
      accent: 'var(--color-accent)',
      success: 'var(--color-success)',
      warning: 'var(--color-warning)',
      danger: 'var(--color-danger)',
      info: 'var(--color-info)',
      light: 'var(--color-light)',
      dark: 'var(--color-dark)',
      white: 'var(--color-white)',
      black: 'var(--color-black)',
      gray: {
        50: 'var(--color-gray-50)',
        100: 'var(--color-gray-100)',
        200: 'var(--color-gray-200)',
        300: 'var(--color-gray-300)',
        400: 'var(--color-gray-400)',
        500: 'var(--color-gray-500)',
        600: 'var(--color-gray-600)',
        700: 'var(--color-gray-700)',
        800: 'var(--color-gray-800)',
        900: 'var(--color-gray-900)',
      },
    },
    spacing: {
      '0': 'var(--spacing-0)',
      '0.5': 'var(--spacing-0-5)',
      '1': 'var(--spacing-1)',
      '1.5': 'var(--spacing-1-5)',
      '2': 'var(--spacing-2)',
      '2.5': 'var(--spacing-2-5)',
      '3': 'var(--spacing-3)',
      '3.5': 'var(--spacing-3-5)',
      '4': 'var(--spacing-4)',
      '5': 'var(--spacing-5)',
      '6': 'var(--spacing-6)',
      '8': 'var(--spacing-8)',
      '10': 'var(--spacing-10)',
      '12': 'var(--spacing-12)',
      '16': 'var(--spacing-16)',
      '20': 'var(--spacing-20)',
      '24': 'var(--spacing-24)',
      '32': 'var(--spacing-32)',
    },
    borderRadius: {
      'none': 'var(--radius-none)',
      'sm': 'var(--radius-sm)',
      'DEFAULT': 'var(--radius-DEFAULT)',
      'md': 'var(--radius-md)',
      'lg': 'var(--radius-lg)',
      'xl': 'var(--radius-xl)',
      '2xl': 'var(--radius-2xl)',
      'full': 'var(--radius-full)',
    },
    fontSize: {
      'xs': 'var(--font-size-xs)',
      'sm': 'var(--font-size-sm)',
      'base': 'var(--font-size-base)',
      'lg': 'var(--font-size-lg)',
      'xl': 'var(--font-size-xl)',
      '2xl': 'var(--font-size-2xl)',
      '3xl': 'var(--font-size-3xl)',
      '4xl': 'var(--font-size-4xl)',
      '5xl': 'var(--font-size-5xl)',
      '6xl': 'var(--font-size-6xl)',
    },
    fontWeight: {
      'thin': 'var(--font-weight-thin)',
      'extralight': 'var(--font-weight-extralight)',
      'light': 'var(--font-weight-light)',
      'normal': 'var(--font-weight-normal)',
      'medium': 'var(--font-weight-medium)',
      'semibold': 'var(--font-weight-semibold)',
      'bold': 'var(--font-weight-bold)',
      'extrabold': 'var(--font-weight-extrabold)',
      'black': 'var(--font-weight-black)',
    },
    boxShadow: {
      'sm': 'var(--shadow-sm)',
      'DEFAULT': 'var(--shadow-DEFAULT)',
      'md': 'var(--shadow-md)',
      'lg': 'var(--shadow-lg)',
      'xl': 'var(--shadow-xl)',
      '2xl': 'var(--shadow-2xl)',
      'inner': 'var(--shadow-inner)',
      'none': 'var(--shadow-none)',
    },
    extend: {
      // Aquí puedes extender la configuración de Tailwind
    },
  },
  plugins: [
    // Plugins adicionales
  ],
}
*/ 